/* ATENCION: PARA AÑADIR CAMPOS O MODIFICAR TABLAS, PRIMERO BORRAR TODAS LAS TABLAS. CREAR TODAS LAS TABLAS DESPUES Y EJECUTAR SCRIPT DE EJEMPLOS */

/* Tabla carrera, añade los campos que vayas a necesitar */
Create table Carrera
(
	nombre varchar(20) not null,
	plazas_disponibles int  not null,
	fecha_celebracion date not null,
	estado varchar(50) not null,
	precio int not null,
	porcentaje_devolucion int,
	constraint pk_nombre primary key (nombre), 
	constraint ck_estado1 check (estado in('creada','inscripcion_abierta', 'inscripcion_cerrada', 'finalizada', 'clasificada', 'cerrada'))
)

/* Tabla club, añade los campos que vayas a necesitar */
Create table Club
(
	nombreClub varchar(50),
	fk_carrera_club varchar(20) not null,
	constraint pk_club primary key (nombreClub),
	constraint fk_carrera_club foreign key (fk_carrera_club) references carrera (nombre)
)

/* Tabla categoria, añade los campos que vayas a necesitar */
Create table Categoria
(
	ID_CAT varchar(70) not null,
	Nombre_cat varchar(50) not null,
	edadmin int,
	edadMax int,
     sexo varchar(20) not null,
	fk_carrera_categ varchar(20) not null,
	constraint pk_categoria primary key (ID_CAT),
	constraint fk_carrera_categ foreign key (fk_carrera_categ) references carrera (nombre)
)

/* Tabla atleta, añade los campos que vayas a necesitar */
Create table Atleta
(
	DNI varchar(9) not null,
	Nombre varchar(50) not null,
	Apellidos varchar(100),
	fk_categoria varchar(70),
	sexo varchar(20) not null,
	fecha_nacimiento date not null,
	fk_carrera varchar(20) not null,
	fecha_inscripcion date not null,
	estado varchar(20) not null,
	dorsal varchar(20),
	tiempo varchar(10),
	fk_club varchar(70),
	constraint pk_atleta primary key (DNI, fk_carrera),
	constraint fk_carrera foreign key (fk_carrera) references carrera (nombre),
	constraint fk_club foreign key (fk_club) references club (nombreClub),
	constraint fk_categoria foreign key (fk_categoria) references categoria (ID_CAT),
	constraint ck_sexo check (sexo in('masculino', 'femenino')),
	constraint ck_estado check (estado in('inscrito', 'pagado'))
);
